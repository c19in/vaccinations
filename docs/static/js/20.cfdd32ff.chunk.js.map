{"version":3,"sources":["animations.js","components/Navbar.js","App.js"],"names":["SLIDE_IN","position","transform","height","zIndex","SLIDE_OUT","SLIDE_IN_MOBILE","opacity","top","SLIDE_OUT_MOBILE","ENTER_IN","marginTop","marginBottom","ENTER_OUT","TABLE_FADE_IN","TABLE_FADE_OUT","Navbar","showLanguageSwitcher","pages","setShowLanguageSwitcher","useTranslation","i18n","t","currentLanguage","Object","keys","locales","includes","language","options","fallbackLng","useState","expand","setExpand","darkMode","useDarkMode","useLockBodyScroll","windowSize","useWindowSize","usePageLeave","navbarTransition","useTransition","from","enter","handleMouseEnter","width","leave","config","mass","tension","friction","useCallback","handleLanguageSwitcher","style","item","div","className","onClick","onMouseEnter","bind","to","activeNavIcon","path","stroke","window","location","pathname","SunMoon","toggle","value","color","Home","lazy","retry","State","LanguageSwitcher","Banner","App","useLocation","pageLink","process","view","displayName","showInNavbar","useEffect","document","documentElement","scrollTo","behavior","body","fallback","map","page","index","exact","render","match"],"mappings":"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","file":"static/js/20.cfdd32ff.chunk.js","sourcesContent":["/*\n * Navbar\n */\n\nexport const SLIDE_IN = {\n  position: 'absolute',\n  transform: 'translate3d(-20rem, 0, 0)',\n  height: '100vh',\n  zIndex: -1,\n};\n\nexport const SLIDE_OUT = {\n  position: 'absolute',\n  transform: 'translate3d(10rem, 0, 0)',\n};\n\nexport const SLIDE_IN_MOBILE = {\n  opacity: 1,\n  position: 'absolute',\n  height: '100vh',\n  top: 64,\n  zIndex: 999,\n};\n\nexport const SLIDE_OUT_MOBILE = {\n  opacity: 1,\n  position: 'absolute',\n  height: '100vh',\n  top: 64,\n  zIndex: 999,\n};\n\n/*\n * Language Switcher\n */\n\nexport const ENTER_IN = {\n  opacity: 1,\n  marginTop: '7.5rem',\n  marginBottom: '30rem',\n};\n\nexport const ENTER_OUT = {\n  opacity: 0,\n  height: '0rem',\n  marginTop: '0rem',\n  marginBottom: '0rem',\n};\n\n/*\n * Table\n */\n\nexport const TABLE_FADE_IN = {\n  opacity: 1,\n  transform: 'translate3d(0, 0px, 0)',\n  height: 228,\n};\n\nexport const TABLE_FADE_OUT = {\n  opacity: 0,\n  transform: 'translate3d(0, 2px, 0)',\n  height: 0,\n};\n","import {\n  SLIDE_IN,\n  SLIDE_OUT,\n  SLIDE_IN_MOBILE,\n  SLIDE_OUT_MOBILE,\n} from '../animations';\nimport locales from '../i18n/locales.json';\n\nimport {useState, useCallback, useRef} from 'react';\n// import {Book, HelpCircle, Home, Moon, Sun, Users} from 'react-feather';\nimport {Home, Moon, Sun} from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\nimport {useTransition, animated} from 'react-spring';\nimport {useLockBodyScroll, usePageLeave, useWindowSize} from 'react-use';\nimport useDarkMode from 'use-dark-mode';\n\nfunction Navbar({pages, showLanguageSwitcher, setShowLanguageSwitcher}) {\n  const {i18n, t} = useTranslation();\n  const currentLanguage = Object.keys(locales).includes(i18n?.language)\n    ? i18n?.language\n    : i18n?.options?.fallbackLng[0];\n\n  const [expand, setExpand] = useState(false);\n  const darkMode = useDarkMode(false);\n\n  useLockBodyScroll(expand);\n  const windowSize = useWindowSize();\n\n  usePageLeave(() => setExpand(false));\n\n  const navbarTransition = useTransition(true, {\n    from: {opacity: 0},\n    enter: {opacity: 1},\n  });\n\n  // eslint-disable-next-line\n  const expandTransition = useTransition(expand, {\n    from: windowSize.width < 769 ? SLIDE_IN_MOBILE : SLIDE_IN,\n    enter: windowSize.width < 769 ? SLIDE_OUT_MOBILE : SLIDE_OUT,\n    leave: windowSize.width < 769 ? SLIDE_IN_MOBILE : SLIDE_IN,\n    config: {mass: 1, tension: 210, friction: 26},\n  });\n\n  const handleMouseEnter = useCallback(() => {\n    if (windowSize.width >= 769) {\n      setExpand(true);\n    }\n  }, [windowSize.width]);\n\n  const handleLanguageSwitcher = useCallback(() => {\n    if (expand) setExpand(false);\n    setShowLanguageSwitcher(!showLanguageSwitcher);\n  }, [expand, showLanguageSwitcher, setExpand, setShowLanguageSwitcher]);\n\n  // FIXME: used vaccinations below because ${process.env.PUBLIC_URL} encodes slash\n\n  return navbarTransition((style, item) => (\n    <animated.div className=\"Navbar\" {...{style}}>\n      <div className=\"navbar-left\" onClick={handleLanguageSwitcher}>\n        {locales[currentLanguage]}\n      </div>\n\n      <div\n        className=\"navbar-right\"\n        onMouseEnter={handleMouseEnter}\n        {...(windowSize.width < 769 && {\n          onClick: setExpand.bind(this, !expand),\n        })}\n      >\n        {windowSize.width < 769 && (\n          <span>{expand ? t('Close') : t('Menu')}</span>\n        )}\n\n        {windowSize.width >= 769 && (\n          <>\n            <Link to=\"/vaccinations\">\n              <span>\n                <Home {...activeNavIcon('/')} />\n              </span>\n            </Link>\n            <span>\n              <SunMoon {...{darkMode}} />\n            </span>\n          </>\n        )}\n      </div>\n    </animated.div>\n  ));\n}\n\n// eslint-disable-next-line\nfunction Expand({pages, setExpand, darkMode, windowSize}) {\n  const expandElement = useRef(null);\n  const {t} = useTranslation();\n\n  const handleMouseLeave = useCallback(() => {\n    windowSize.width >= 769 && setExpand(false);\n  }, [setExpand, windowSize.width]);\n\n  return (\n    <div className=\"expand\" ref={expandElement} onMouseLeave={handleMouseLeave}>\n      {pages.map((page, i) => {\n        if (page.showInNavbar === true) {\n          return (\n            <Link\n              to={page.pageLink}\n              key={i}\n              {...(windowSize.width < 769 && {\n                onClick: setExpand.bind(this, false),\n              })}\n            >\n              <span\n                {...navLinkProps(page.pageLink, page.animationDelayForNavbar)}\n              >\n                {t(page.displayName)}\n              </span>\n            </Link>\n          );\n        }\n        return null;\n      })}\n      {windowSize.width < 769 && <SunMoon {...{darkMode}} />}\n    </div>\n  );\n}\n\nexport default Navbar;\n\nconst navLinkProps = (path, animationDelay) => ({\n  className: `${window.location.pathname === path ? 'focused' : ''}`,\n});\n\nconst activeNavIcon = (path) => ({\n  style: {\n    stroke: window.location.pathname === path ? '#4c75f2' : '',\n  },\n});\n\nconst SunMoon = ({darkMode}) => {\n  return (\n    <div className=\"SunMoon\" onClick={darkMode.toggle}>\n      <div>{darkMode.value ? <Sun color={'#ffc107'} /> : <Moon />}</div>\n    </div>\n  );\n};\n","import './App.scss';\n// import Blog from './components/Blog';\n// eslint-disable-next-line\nimport Navbar from './components/Navbar';\n// To have Navbar, add\n// <Navbar {...{pages, showLanguageSwitcher, setShowLanguageSwitcher}} />\n// before <Banner...\n\nimport {retry} from './utils/commonFunctions';\n\nimport {lazy, useState, Suspense, useEffect} from 'react';\nimport {Route, Redirect, Switch, useLocation} from 'react-router-dom';\n\nconst Home = lazy(() => retry(() => import('./components/Home')));\n// const Volunteers = lazy(() => retry(() => import('./components/Volunteers')));\n// const About = lazy(() => retry(() => import('./components/About')));\nconst State = lazy(() => retry(() => import('./components/State')));\nconst LanguageSwitcher = lazy(() =>\n  retry(() => import('./components/LanguageSwitcher'))\n);\nconst Banner = lazy(() => retry(() => import('./components/Banner')));\n\nconst App = () => {\n  const [showLanguageSwitcher, setShowLanguageSwitcher] = useState(false);\n  const location = useLocation();\n\n  const pages = [\n    {\n      pageLink: process.env.PUBLIC_URL,\n      view: Home,\n      displayName: 'Home',\n      showInNavbar: false,\n    },\n    // {\n    //   pageLink: '/blog',\n    //   view: Blog,\n    //   displayName: 'Blog',\n    //   showInNavbar: true,\n    // },\n    // {\n    //   pageLink: '/volunteers',\n    //   view: Volunteers,\n    //   displayName: 'Volunteers',\n    //   showInNavbar: true,\n    // },\n    {\n      pageLink: 'https://c19in.github.io/about',\n      displayName: 'About',\n      showInNavbar: false,\n    },\n    {\n      pageLink: process.env.PUBLIC_URL + '/state/:stateCode',\n      view: State,\n      displayName: 'State',\n      showInNavbar: false,\n    },\n  ];\n\n  useEffect(() => {\n    if (showLanguageSwitcher) {\n      // For Chrome, Firefox, IE and Opera\n      document.documentElement.scrollTo({top: 0, behavior: 'smooth'});\n      // For Safari\n      document.body.scrollTo({top: 0, behavior: 'smooth'});\n    }\n  }, [showLanguageSwitcher]);\n\n  return (\n    <div className=\"App\">\n      <Suspense fallback={<div />}>\n        <LanguageSwitcher\n          {...{showLanguageSwitcher, setShowLanguageSwitcher}}\n        />\n      </Suspense>\n      <Banner />\n      <Navbar {...{pages, showLanguageSwitcher, setShowLanguageSwitcher}} />\n      <Suspense fallback={<div />}>\n        <Switch location={location}>\n          {pages.map((page, index) => {\n            return (\n              <Route\n                exact\n                path={page.pageLink}\n                render={({match}) => <page.view />}\n                key={index}\n              />\n            );\n          })}\n          <Redirect to=\"/\" />\n        </Switch>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default App;\n"],"sourceRoot":""}