{"version":3,"sources":["../node_modules/d3-scale/src/log.js","../node_modules/d3-array/src/extent.js","../node_modules/d3-shape/src/curve/step.js","components/Timeseries.js"],"names":["transformLog","x","Math","log","transformExp","exp","transformLogn","transformExpn","pow10","isFinite","reflect","f","k","loggish","transform","logs","pows","scale","domain","base","rescale","E","log10","log2","logp","pow","powp","_","arguments","length","ticks","count","d","u","v","r","t","i","j","n","z","floor","ceil","push","min","map","reverse","tickFormat","specifier","formatSpecifier","precision","trim","format","Infinity","max","round","nice","transformer","copy","initRange","apply","extent","values","valueof","undefined","value","index","Step","context","this","_context","_t","prototype","areaStart","_line","areaEnd","NaN","lineStart","_x","_y","_point","lineEnd","lineTo","closePath","point","y","moveTo","x1","margin","yScaleShrinkFactor","Timeseries","statistics","timeseries","dates","endDate","chartType","isUniform","isLog","isMovingAverage","noRegionHighlightedDistrictData","metadata","useTranslation","refs","useRef","useMeasure","wrapperRef","width","height","useState","highlightedDate","setHighlightedDate","useEffect","getTimeseriesStatistic","useCallback","date","statistic","movingAverage","getStatistic","condenseChart","useMemo","T","days","differenceInDays","parseIndiaDate","chartRight","xScale","scaleTime","clamp","range","yScales","chartBottom","addScaleBuffer","reduce","res","PRIMARY_STATISTICS","uniformScaleMin","uniformScaleMax","yScaleUniformLinear","scaleLinear","yScaleUniformLog","scaleLog","includes","scaleMin","scaleMax","STATISTIC_CONFIGS","isDiscrete","xAxis","g","attr","call","axisBottom","numTicksX","xAxis2","yScale","tickValues","tickSize","select","style","yAxis","axisRight","num","formatNumber","tickPadding","forEach","ref","current","svg","transition","duration","D3_TRANSITION_DURATION","statisticConfig","isNonLinear","nonLinear","selectAll","data","join","enter","append","color","areaPath","allZero","area","curve","curveStep","y0","y1","update","attrTween","previous","interpolatePath","exit","remove","linePath","curveMonotoneX","line","curveLinear","on","mousemove","event","touches","mouseout","xm","pointer","invert","isNaN","bisectDate","bisector","left","dateLeft","dateRight","getTimeseriesStatisticDelta","currCount","hideZero","prevDate","findIndex","trail","animationDelay","className","total","delta","classnames","capitalize","displayName","formatDate","hasPrimary","element","preserveAspectRatio","isEqual","prevProps","currProps","equal","regionHighlighted","stateCode","districtName","memo"],"mappings":"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","file":"static/js/26.8f907f2d.chunk.js","sourcesContent":["import {ticks} from \"d3-array\";\nimport {format, formatSpecifier} from \"d3-format\";\nimport nice from \"./nice.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : x => Math.pow(base, x);\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), x => Math.log(x) / base);\n}\n\nfunction reflect(f) {\n  return (x, k) => -f(-x, k);\n}\n\nexport function loggish(transform) {\n  const scale = transform(transformLog, transformExp);\n  const domain = scale.domain;\n  let base = 10;\n  let logs;\n  let pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = count => {\n    const d = domain();\n    let u = d[0];\n    let v = d[d.length - 1];\n    const r = v < u;\n\n    if (r) ([u, v] = [v, u]);\n\n    let i = logs(u);\n    let j = logs(v);\n    let k;\n    let t;\n    const n = count == null ? 10 : +count;\n    let z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.floor(i), j = Math.ceil(j);\n      if (u > 0) for (; i <= j; ++i) {\n        for (k = 1; k < base; ++k) {\n          t = i < 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i <= j; ++i) {\n        for (k = base - 1; k >= 1; --k) {\n          t = i > 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n      if (z.length * 2 < n) z = ticks(u, v, n);\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = (count, specifier) => {\n    if (count == null) count = 10;\n    if (specifier == null) specifier = base === 10 ? \"s\" : \",\";\n    if (typeof specifier !== \"function\") {\n      if (!(base % 1) && (specifier = formatSpecifier(specifier)).precision == null) specifier.trim = true;\n      specifier = format(specifier);\n    }\n    if (count === Infinity) return specifier;\n    const k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return d => {\n      let i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = () => {\n    return domain(nice(domain(), {\n      floor: x => pows(Math.floor(logs(x))),\n      ceil: x => pows(Math.ceil(logs(x)))\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  const scale = loggish(transformer()).domain([1, 10]);\n  scale.copy = () => copy(scale, log()).base(scale.base());\n  initRange.apply(scale, arguments);\n  return scale;\n}\n","export default function extent(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import {\n  D3_TRANSITION_DURATION,\n  PRIMARY_STATISTICS,\n  STATISTIC_CONFIGS,\n} from '../constants';\nimport {\n  capitalize,\n  formatNumber,\n  formatDate,\n  getStatistic,\n  parseIndiaDate,\n} from '../utils/commonFunctions';\n\nimport classnames from 'classnames';\nimport {bisector, extent} from 'd3-array';\nimport {axisBottom, axisRight} from 'd3-axis';\nimport {interpolatePath} from 'd3-interpolate-path';\nimport {scaleTime, scaleLinear, scaleLog} from 'd3-scale';\nimport {select, pointer} from 'd3-selection';\nimport {area, line, curveLinear, curveMonotoneX, curveStep} from 'd3-shape';\nimport 'd3-transition';\nimport {differenceInDays} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport {memo, useCallback, useEffect, useRef, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useMeasure} from 'react-use';\n\n// Chart margins\nconst margin = {top: 15, right: 35, bottom: 25, left: 25};\n// Buffer space along y-axis\nconst yScaleShrinkFactor = 0.7;\nconst numTicksX = (width) => (width < 480 ? 4 : 6);\n\nfunction Timeseries({\n  statistics,\n  timeseries,\n  dates,\n  endDate,\n  chartType,\n  isUniform,\n  isLog,\n  isMovingAverage,\n  noRegionHighlightedDistrictData,\n  metadata,\n}) {\n  const {t} = useTranslation();\n  const refs = useRef([]);\n  const [wrapperRef, {width, height}] = useMeasure();\n\n  const [highlightedDate, setHighlightedDate] = useState(\n    dates[dates.length - 1]\n  );\n  useEffect(() => {\n    setHighlightedDate(dates[dates.length - 1]);\n  }, [dates]);\n\n  // console.log('checking metadata in Timeseries()');\n  // console.log(metadata);\n\n  const getTimeseriesStatistic = useCallback(\n    (date, statistic, movingAverage = isMovingAverage) => {\n      return getStatistic(\n        timeseries?.[date],\n        chartType,\n        statistic,\n        {\n          movingAverage,\n        },\n        metadata\n      );\n    },\n    [chartType, isMovingAverage, timeseries, metadata]\n  );\n\n  const condenseChart = useMemo(() => {\n    const T = dates.length;\n    const days = differenceInDays(\n      parseIndiaDate(dates[T - 1]),\n      parseIndiaDate(dates[0])\n    );\n    // Chart extremes\n    const chartRight = width - margin.right;\n    // Bar widths\n    const axisWidth = Math.max(0, chartRight - margin.left) / (1.25 * days);\n    return axisWidth < 4;\n  }, [width, dates]);\n\n  const xScale = useMemo(() => {\n    const T = dates.length;\n    const chartRight = width - margin.right;\n\n    return scaleTime()\n      .clamp(true)\n      .domain([\n        parseIndiaDate(dates[0] || endDate),\n        parseIndiaDate(dates[T - 1] || endDate),\n      ])\n      .range([margin.left, chartRight]);\n  }, [width, endDate, dates]);\n\n  const yScales = useMemo(() => {\n    const chartBottom = height - margin.bottom;\n\n    const addScaleBuffer = (scale, log = false) => {\n      const domain = scale.domain();\n      if (log) {\n        scale.domain([\n          domain[0],\n          domain[0] * Math.pow(domain[1] / domain[0], 1 / yScaleShrinkFactor),\n        ]);\n      } else {\n        scale.domain([\n          domain[0],\n          domain[0] + (domain[1] - domain[0]) / yScaleShrinkFactor,\n        ]);\n      }\n      return scale;\n    };\n\n    const [uniformScaleMin, uniformScaleMax] = extent(\n      dates.reduce((res, date) => {\n        res.push(\n          ...PRIMARY_STATISTICS.map((statistic) =>\n            getTimeseriesStatistic(date, statistic)\n          )\n        );\n        return res;\n      }, [])\n    );\n\n    const yScaleUniformLinear = addScaleBuffer(\n      scaleLinear()\n        .clamp(true)\n        .domain([Math.min(0, uniformScaleMin), Math.max(1, uniformScaleMax)])\n        .range([chartBottom, margin.top])\n        .nice(4)\n    );\n\n    const yScaleUniformLog = addScaleBuffer(\n      scaleLog()\n        .clamp(true)\n        .domain([1, Math.max(10, uniformScaleMax)])\n        .range([chartBottom, margin.top])\n        .nice(4),\n      true\n    );\n\n    return statistics.map((statistic) => {\n      if (isUniform) {\n        if (\n          chartType === 'total' &&\n          isLog &&\n          PRIMARY_STATISTICS.includes(statistic)\n        ) {\n          return yScaleUniformLog;\n        } else if (PRIMARY_STATISTICS.includes(statistic)) {\n          return yScaleUniformLinear;\n        }\n      }\n\n      const [scaleMin, scaleMax] = extent(dates, (date) =>\n        getTimeseriesStatistic(date, statistic)\n      );\n\n      if (chartType === 'total' && isLog) {\n        return addScaleBuffer(\n          scaleLog()\n            .clamp(true)\n            .domain([1, Math.max(10, scaleMax)])\n            .range([chartBottom, margin.top])\n            .nice(4),\n          true\n        );\n      } else {\n        return addScaleBuffer(\n          scaleLinear()\n            .clamp(true)\n            .domain([\n              Math.min(0, scaleMin),\n              STATISTIC_CONFIGS[statistic].format === '%'\n                ? Math.min(100, Math.max(1, scaleMax))\n                : Math.max(1, scaleMax),\n            ])\n            .range([chartBottom, margin.top])\n            .nice(4)\n        );\n      }\n    });\n  }, [\n    height,\n    chartType,\n    isUniform,\n    isLog,\n    statistics,\n    dates,\n    getTimeseriesStatistic,\n  ]);\n\n  useEffect(() => {\n    if (!width || !height) return;\n\n    const T = dates.length;\n    // Chart extremes\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n\n    const isDiscrete = chartType === 'delta' && !isMovingAverage;\n\n    const xAxis = (g) =>\n      g\n        .attr('class', 'x-axis')\n        .call(axisBottom(xScale).ticks(numTicksX(width)));\n\n    const xAxis2 = (g, yScale) => {\n      g.attr('class', 'x-axis2')\n        .call(axisBottom(xScale).tickValues([]).tickSize(0))\n        .select('.domain')\n        .style('transform', `translate3d(0, ${yScale(0)}px, 0)`);\n\n      if (yScale(0) !== chartBottom) g.select('.domain').attr('opacity', 0.4);\n      else g.select('.domain').attr('opacity', 0);\n    };\n\n    const yAxis = (g, yScale, format) =>\n      g.attr('class', 'y-axis').call(\n        axisRight(yScale)\n          .ticks(4)\n          .tickFormat((num) => formatNumber(num, format))\n          .tickPadding(4)\n      );\n\n    function mousemove(event) {\n      const xm = pointer(event)[0];\n      const date = xScale.invert(xm);\n      if (!isNaN(date)) {\n        const bisectDate = bisector((date) => parseIndiaDate(date)).left;\n        const index = bisectDate(dates, date, 1);\n        const dateLeft = dates[index - 1];\n        const dateRight = dates[index];\n        setHighlightedDate(\n          date - parseIndiaDate(dateLeft) < parseIndiaDate(dateRight) - date\n            ? dateLeft\n            : dateRight\n        );\n      }\n    }\n\n    function mouseout(event) {\n      setHighlightedDate(dates[T - 1]);\n    }\n\n    /* Begin drawing charts */\n    statistics.forEach((statistic, i) => {\n      const ref = refs.current[i];\n      const svg = select(ref);\n      const t = svg.transition().duration(D3_TRANSITION_DURATION);\n\n      const yScale = yScales[i];\n      const statisticConfig = STATISTIC_CONFIGS[statistic];\n      const format =\n        STATISTIC_CONFIGS[statistic].format === '%' ? '%' : 'short';\n      const isNonLinear = !!STATISTIC_CONFIGS[statistic]?.nonLinear;\n\n      /* X axis */\n      svg\n        .select('.x-axis')\n        .style('transform', `translate3d(0, ${chartBottom}px, 0)`)\n        .transition(t)\n        .call(xAxis);\n\n      svg.select('.x-axis2').transition(t).call(xAxis2, yScale);\n\n      /* Y axis */\n      svg\n        .select('.y-axis')\n        .style('transform', `translate3d(${chartRight}px, 0, 0)`)\n        .transition(t)\n        .call(yAxis, yScale, format);\n\n      /* Path dots */\n      svg\n        .selectAll('circle.normal')\n        .data(condenseChart ? [] : dates, (date) => date)\n        .join((enter) =>\n          enter\n            .append('circle')\n            .attr('class', 'normal')\n            .attr('fill', statisticConfig?.color)\n            .attr('stroke', statisticConfig?.color)\n            .attr('cx', (date) => xScale(parseIndiaDate(date)))\n            .attr('cy', (date) =>\n              yScale(isDiscrete ? 0 : getTimeseriesStatistic(date, statistic))\n            )\n            .attr('r', 2)\n        )\n        .transition(t)\n        .attr('cx', (date) => xScale(parseIndiaDate(date)))\n        .attr('cy', (date) => yScale(getTimeseriesStatistic(date, statistic)));\n\n      const areaPath = (dates, allZero = false) =>\n        area()\n          .curve(curveStep)\n          .x((date) => xScale(parseIndiaDate(date)))\n          .y0(yScale(0))\n          .y1(\n            allZero\n              ? yScale(0)\n              : (date) => yScale(getTimeseriesStatistic(date, statistic, false))\n          )(dates);\n\n      svg\n        .selectAll('.trend-area')\n        .data(\n          T && chartType === 'delta' && !isNonLinear && condenseChart\n            ? [dates]\n            : []\n        )\n        .join(\n          (enter) =>\n            enter\n              .append('path')\n              .attr('class', 'trend-area')\n              .call((enter) =>\n                enter\n                  .attr('d', (dates) => areaPath(dates, true))\n                  .transition(t)\n                  .attr('d', areaPath)\n              ),\n          (update) =>\n            update.call((update) =>\n              update.transition(t).attrTween('d', function (dates) {\n                const previous = select(this).attr('d');\n                const current = areaPath(dates);\n                return interpolatePath(previous, current);\n              })\n            ),\n          (exit) =>\n            exit.call((exit) =>\n              exit\n                .transition(t)\n                .attr('d', (dates) => areaPath(dates, true))\n                .remove()\n            )\n        )\n        .transition(t)\n        .attr('opacity', isMovingAverage ? 0.3 : 1);\n\n      svg\n        .selectAll('.stem')\n        .data(\n          T && chartType === 'delta' && !isNonLinear && !condenseChart\n            ? dates\n            : [],\n          (date) => date\n        )\n        .join(\n          (enter) =>\n            enter\n              .append('line')\n              .attr('class', 'stem')\n              .attr('stroke-width', 4)\n              .attr('x1', (date) => xScale(parseIndiaDate(date)))\n              .attr('y1', yScale(0))\n              .attr('x2', (date) => xScale(parseIndiaDate(date)))\n              .attr('y2', yScale(0)),\n          (update) => update,\n          (exit) =>\n            exit.call((exit) =>\n              exit\n                .transition(t)\n                .attr('x1', (date) => xScale(parseIndiaDate(date)))\n                .attr('x2', (date) => xScale(parseIndiaDate(date)))\n                .attr('y1', yScale(0))\n                .attr('y2', yScale(0))\n                .remove()\n            )\n        )\n        .transition(t)\n        .attr('x1', (date) => xScale(parseIndiaDate(date)))\n        .attr('y1', yScale(0))\n        .attr('x2', (date) => xScale(parseIndiaDate(date)))\n        .attr('y2', (date) =>\n          yScale(getTimeseriesStatistic(date, statistic, false))\n        )\n        .attr('opacity', isMovingAverage ? 0.2 : 1);\n\n      const linePath = (\n        movingAverage = isMovingAverage,\n        curve = curveMonotoneX\n      ) =>\n        line()\n          .curve(curve)\n          .x((date) => xScale(parseIndiaDate(date)))\n          .y((date) =>\n            yScale(getTimeseriesStatistic(date, statistic, movingAverage))\n          );\n\n      svg\n        .select('.trend')\n        .selectAll('path')\n        .data(\n          T && (chartType === 'total' || isNonLinear || isMovingAverage)\n            ? [dates]\n            : []\n        )\n        .join(\n          (enter) =>\n            enter\n              .append('path')\n              .attr('class', 'trend')\n              .attr('fill', 'none')\n              .attr('stroke-width', 4)\n              .attr('d', linePath())\n              .call((enter) => enter.transition(t).attr('opacity', 1)),\n          (update) =>\n            update.call((update) =>\n              update\n                .transition(t)\n                .attrTween('d', function (date) {\n                  const previous = select(this).attr('d');\n                  const current = linePath()(date);\n                  return interpolatePath(previous, current);\n                })\n                .attr('opacity', 1)\n            ),\n          (exit) =>\n            exit.call((exit) => exit.transition(t).attr('opacity', 0).remove())\n        )\n        .attr('stroke', statisticConfig?.color + (condenseChart ? '99' : '50'));\n\n      svg\n        .select('.trend-background')\n        .selectAll('path')\n        .data(\n          T && chartType === 'delta' && isNonLinear && isMovingAverage\n            ? [dates]\n            : []\n        )\n        .join(\n          (enter) =>\n            enter\n              .append('path')\n              .attr('class', 'trend-background')\n              .attr('fill', 'none')\n              .attr('stroke-width', 4)\n              .attr('d', linePath(false, curveLinear))\n              .call((enter) => enter.transition(t).attr('opacity', 0.2)),\n          (update) =>\n            update.call((update) =>\n              update\n                .transition(t)\n                .attrTween('d', function (date) {\n                  const previous = select(this).attr('d');\n                  const current = linePath(false, curveLinear)(date);\n                  return interpolatePath(previous, current);\n                })\n                .attr('opacity', 0.2)\n            ),\n          (exit) =>\n            exit.call((exit) => exit.transition(t).attr('opacity', 0).remove())\n        )\n        .attr('stroke', statisticConfig?.color + (condenseChart ? '99' : '50'));\n\n      svg.selectAll('*').attr('pointer-events', 'none');\n      svg\n        .on('mousemove', mousemove)\n        .on('touchmove', (event) => mousemove(event.touches[0]))\n        .on('mouseout touchend', mouseout);\n    });\n  }, [\n    width,\n    height,\n    chartType,\n    isMovingAverage,\n    condenseChart,\n    xScale,\n    yScales,\n    statistics,\n    getTimeseriesStatistic,\n    dates,\n  ]);\n\n  useEffect(() => {\n    statistics.forEach((statistic, i) => {\n      const ref = refs.current[i];\n      const svg = select(ref);\n      const statisticConfig = STATISTIC_CONFIGS[statistic];\n      const yScale = yScales[i];\n      const t = svg.transition().duration(D3_TRANSITION_DURATION);\n\n      svg\n        .selectAll('circle.condensed')\n        .data(\n          condenseChart && highlightedDate ? [highlightedDate] : [],\n          (date) => date\n        )\n        .join((enter) =>\n          enter\n            .append('circle')\n            .attr('class', 'condensed')\n            .attr('fill', statisticConfig?.color)\n            .attr('stroke', statisticConfig?.color)\n            .attr('pointer-events', 'none')\n            .attr('cx', (date) => xScale(parseIndiaDate(date)))\n            .attr('cy', (date) =>\n              yScale(getTimeseriesStatistic(date, statistic))\n            )\n            .attr('r', 4)\n        )\n        .transition(t)\n        .attr('cx', (date) => xScale(parseIndiaDate(date)))\n        .attr('cy', (date) => yScale(getTimeseriesStatistic(date, statistic)));\n\n      if (!condenseChart) {\n        svg\n          .selectAll('circle')\n          .attr('r', (date) => (date === highlightedDate ? 4 : 2));\n      }\n    });\n  }, [\n    condenseChart,\n    highlightedDate,\n    xScale,\n    yScales,\n    statistics,\n    getTimeseriesStatistic,\n  ]);\n\n  const getTimeseriesStatisticDelta = useCallback(\n    (statistic) => {\n      if (!highlightedDate) return;\n\n      const currCount = getTimeseriesStatistic(highlightedDate, statistic);\n      if (STATISTIC_CONFIGS[statistic]?.hideZero && currCount === 0) return;\n\n      const prevDate =\n        dates[dates.findIndex((date) => date === highlightedDate) - 1];\n\n      const prevCount = getTimeseriesStatistic(prevDate, statistic);\n      return currCount - prevCount;\n    },\n    [dates, highlightedDate, getTimeseriesStatistic]\n  );\n\n  const trail = useMemo(\n    () =>\n      statistics.map((statistic, index) => ({\n        animationDelay: `${index * 250}ms`,\n      })),\n    [statistics]\n  );\n\n  return (\n    <div className=\"Timeseries\">\n      {statistics.map((statistic, index) => {\n        const total = getTimeseriesStatistic(highlightedDate, statistic);\n        const delta = getTimeseriesStatisticDelta(statistic, index);\n        const statisticConfig = STATISTIC_CONFIGS[statistic];\n        return (\n          <div\n            key={statistic}\n            className={classnames('svg-parent fadeInUp', `is-${statistic}`)}\n            style={trail[index]}\n            ref={index === 0 ? wrapperRef : null}\n          >\n            {highlightedDate && (\n              <div className={classnames('stats', `is-${statistic}`)}>\n                <h5 className=\"title\">\n                  {t(capitalize(statisticConfig.displayName))}\n                </h5>\n                <h5>{formatDate(highlightedDate, 'dd MMMM')}</h5>\n                <div className=\"stats-bottom\">\n                  <h2>\n                    {!noRegionHighlightedDistrictData ||\n                    !statisticConfig?.hasPrimary\n                      ? formatNumber(\n                          total,\n                          statisticConfig.format !== 'short'\n                            ? statisticConfig.format\n                            : 'long',\n                          statistic\n                        )\n                      : '-'}\n                  </h2>\n                  <h6>\n                    {!noRegionHighlightedDistrictData ||\n                    !statisticConfig?.hasPrimary\n                      ? `${delta > 0 ? '+' : ''}${formatNumber(\n                          delta,\n                          statisticConfig.format !== 'short'\n                            ? statisticConfig.format\n                            : 'long',\n                          statistic\n                        )}`\n                      : ''}\n                  </h6>\n                </div>\n              </div>\n            )}\n            <svg\n              ref={(element) => {\n                refs.current[index] = element;\n              }}\n              preserveAspectRatio=\"xMidYMid meet\"\n            >\n              <g className=\"x-axis\" />\n              <g className=\"x-axis2\" />\n              <g className=\"y-axis\" />\n              <g className=\"trend-background\" />\n              <g className=\"trend\" />\n            </svg>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(currProps.chartType, prevProps.chartType)) {\n    return false;\n  } else if (!equal(currProps.isUniform, prevProps.isUniform)) {\n    return false;\n  } else if (!equal(currProps.isLog, prevProps.isLog)) {\n    return false;\n  } else if (!equal(currProps.isMovingAverage, prevProps.isMovingAverage)) {\n    return false;\n  } else if (\n    !equal(\n      currProps.regionHighlighted.stateCode,\n      prevProps.regionHighlighted.stateCode\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      currProps.regionHighlighted.districtName,\n      prevProps.regionHighlighted.districtName\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      currProps.noRegionHighlightedDistrictData,\n      prevProps.noRegionHighlightedDistrictData\n    )\n  ) {\n    return false;\n  } else if (!equal(currProps.endDate, prevProps.endDate)) {\n    return false;\n  } else if (!equal(currProps.statistics, prevProps.statistics)) {\n    return false;\n  } else if (!equal(currProps.dates, prevProps.dates)) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(Timeseries, isEqual);\n"],"sourceRoot":""}