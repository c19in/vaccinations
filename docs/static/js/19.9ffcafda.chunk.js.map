{"version":3,"sources":["../node_modules/react-use/esm/useIsomorphicLayoutEffect.js","../node_modules/react-use/esm/useMeasure.js","../node_modules/d3-selection/src/sourceEvent.js","../node_modules/d3-scale/src/log.js","../node_modules/d3-axis/src/identity.js","../node_modules/d3-axis/src/axis.js","../node_modules/d3-array/src/extent.js","../node_modules/d3-selection/src/pointer.js","components/TimeseriesOverlay.js"],"names":["useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useEffect","defaultState","x","y","width","height","top","left","bottom","right","window","ResizeObserver","_a","useState","element","ref","_b","rect","setRect","observer","useMemo","entries","contentRect","top_1","observe","disconnect","noop","event","sourceEvent","transformLog","Math","log","transformExp","exp","transformLogn","transformExpn","pow10","isFinite","reflect","f","k","loggish","transform","logs","pows","scale","domain","base","rescale","E","log10","log2","logp","pow","powp","_","arguments","length","ticks","count","d","u","v","r","t","i","j","n","z","floor","ceil","push","min","map","reverse","tickFormat","specifier","formatSpecifier","precision","trim","format","Infinity","max","round","nice","transformer","copy","initRange","apply","epsilon","translateX","translateY","number","center","offset","bandwidth","entering","this","__axis","axis","orient","tickArguments","tickValues","tickSizeInner","tickSizeOuter","tickPadding","devicePixelRatio","context","values","identity","spacing","range","range0","range1","position","selection","path","selectAll","data","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","merge","insert","transition","getAttribute","p","parentNode","remove","filter","each","Array","from","slice","tickSize","axisRight","axisBottom","extent","valueof","undefined","value","index","node","currentTarget","svg","ownerSVGElement","createSVGPoint","point","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","pageX","pageY","margin","yScaleShrinkFactor","TimeseriesOverlay","xystatistics","timeseries","dates","endDate","chartType","isUniform","isLog","isMovingAverage","noRegionHighlightedDistrictData","metadata","useTranslation","refs","useRef","useMeasure","wrapperRef","highlightedDate","setHighlightedDate","getTimeseriesStatistic","useCallback","date","statistic","movingAverage","getStatistic","condenseChart","T","days","differenceInDays","parseIndiaDate","chartRight","xScale","scaleTime","clamp","yScales","chartBottom","addScaleBuffer","reduce","res","PRIMARY_STATISTICS","uniformScaleMin","uniformScaleMax","yScaleUniformLinear","scaleLinear","yScaleUniformLog","scaleLog","includes","scaleMin","scaleMax","STATISTIC_CONFIGS","statistic1","statistic2","current","duration","D3_TRANSITION_DURATION","yScale","statisticConfig1","statisticConfig2","isNonLinear","nonLinear","style","call","g","numTicksX","num","formatNumber","join","curve","curveMonotoneX","linePath1","color","linePath2","on","mousemove","touches","xm","pointer","invert","isNaN","bisectDate","bisector","dateLeft","dateRight","forEach","statisticConfig","getTimeseriesStatisticDelta","currCount","hideZero","prevDate","findIndex","trail","animationDelay","className","total","delta","classnames","capitalize","displayName","formatDate","hasPrimary","preserveAspectRatio"],"mappings":"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","file":"static/js/19.9ffcafda.chunk.js","sourcesContent":["import { useEffect, useLayoutEffect } from 'react';\nimport { isBrowser } from './misc/util';\nvar useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\nexport default useIsomorphicLayoutEffect;\n","import { useMemo, useState } from 'react';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\nimport { isBrowser, noop } from './misc/util';\nvar defaultState = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n};\nfunction useMeasure() {\n    var _a = useState(null), element = _a[0], ref = _a[1];\n    var _b = useState(defaultState), rect = _b[0], setRect = _b[1];\n    var observer = useMemo(function () {\n        return new window.ResizeObserver(function (entries) {\n            if (entries[0]) {\n                var _a = entries[0].contentRect, x = _a.x, y = _a.y, width = _a.width, height = _a.height, top_1 = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n                setRect({ x: x, y: y, width: width, height: height, top: top_1, left: left, bottom: bottom, right: right });\n            }\n        });\n    }, []);\n    useIsomorphicLayoutEffect(function () {\n        if (!element)\n            return;\n        observer.observe(element);\n        return function () {\n            observer.disconnect();\n        };\n    }, [element]);\n    return [ref, rect];\n}\nexport default isBrowser && typeof window.ResizeObserver !== 'undefined'\n    ? useMeasure\n    : (function () { return [noop, defaultState]; });\n","export default function(event) {\n  let sourceEvent;\n  while (sourceEvent = event.sourceEvent) event = sourceEvent;\n  return event;\n}\n","import {ticks} from \"d3-array\";\nimport {format, formatSpecifier} from \"d3-format\";\nimport nice from \"./nice.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : x => Math.pow(base, x);\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), x => Math.log(x) / base);\n}\n\nfunction reflect(f) {\n  return (x, k) => -f(-x, k);\n}\n\nexport function loggish(transform) {\n  const scale = transform(transformLog, transformExp);\n  const domain = scale.domain;\n  let base = 10;\n  let logs;\n  let pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = count => {\n    const d = domain();\n    let u = d[0];\n    let v = d[d.length - 1];\n    const r = v < u;\n\n    if (r) ([u, v] = [v, u]);\n\n    let i = logs(u);\n    let j = logs(v);\n    let k;\n    let t;\n    const n = count == null ? 10 : +count;\n    let z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.floor(i), j = Math.ceil(j);\n      if (u > 0) for (; i <= j; ++i) {\n        for (k = 1; k < base; ++k) {\n          t = i < 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i <= j; ++i) {\n        for (k = base - 1; k >= 1; --k) {\n          t = i > 0 ? k / pows(-i) : k * pows(i);\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n      if (z.length * 2 < n) z = ticks(u, v, n);\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = (count, specifier) => {\n    if (count == null) count = 10;\n    if (specifier == null) specifier = base === 10 ? \"s\" : \",\";\n    if (typeof specifier !== \"function\") {\n      if (!(base % 1) && (specifier = formatSpecifier(specifier)).precision == null) specifier.trim = true;\n      specifier = format(specifier);\n    }\n    if (count === Infinity) return specifier;\n    const k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return d => {\n      let i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = () => {\n    return domain(nice(domain(), {\n      floor: x => pows(Math.floor(logs(x))),\n      ceil: x => pows(Math.ceil(logs(x)))\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  const scale = loggish(transformer()).domain([1, 10]);\n  scale.copy = () => copy(scale, log()).base(scale.base());\n  initRange.apply(scale, arguments);\n  return scale;\n}\n","export default function(x) {\n  return x;\n}\n","import identity from \"./identity.js\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction number(scale) {\n  return d => +scale(d);\n}\n\nfunction center(scale, offset) {\n  offset = Math.max(0, scale.bandwidth() - offset * 2) / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return d => +scale(d) + offset;\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      offset = typeof window !== \"undefined\" && window.devicePixelRatio > 1 ? 0 : 0.5,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + offset,\n        range1 = +range[range.length - 1] + offset,\n        position = (scale.bandwidth ? center : number)(scale.copy(), offset),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d + offset) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform((p && isFinite(p = p(d)) ? p : position(d)) + offset); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient === right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H\" + offset + \"V\" + range1 + \"H\" + k * tickSizeOuter : \"M\" + offset + \",\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V\" + offset + \"H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",\" + offset + \"H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d) + offset); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = Array.from(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : Array.from(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : Array.from(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  axis.offset = function(_) {\n    return arguments.length ? (offset = +_, axis) : offset;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","export default function extent(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n","import sourceEvent from \"./sourceEvent.js\";\n\nexport default function(event, node) {\n  event = sourceEvent(event);\n  if (node === undefined) node = event.currentTarget;\n  if (node) {\n    var svg = node.ownerSVGElement || node;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n    if (node.getBoundingClientRect) {\n      var rect = node.getBoundingClientRect();\n      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n    }\n  }\n  return [event.pageX, event.pageY];\n}\n","import {\n  D3_TRANSITION_DURATION,\n  PRIMARY_STATISTICS,\n  STATISTIC_CONFIGS,\n} from '../constants';\nimport {\n  capitalize,\n  formatNumber,\n  formatDate,\n  getStatistic,\n  parseIndiaDate,\n} from '../utils/commonFunctions';\n\nimport classnames from 'classnames';\nimport {bisector, extent} from 'd3-array';\nimport {axisBottom, axisRight} from 'd3-axis';\n// import {interpolatePath} from 'd3-interpolate-path';\nimport {scaleTime, scaleLinear, scaleLog} from 'd3-scale';\nimport {select, pointer} from 'd3-selection';\n// import {area, line, curveLinear, curveMonotoneX, curveStep} from 'd3-shape';\nimport {line, curveMonotoneX} from 'd3-shape';\nimport 'd3-transition';\nimport {differenceInDays} from 'date-fns';\n// import equal from 'fast-deep-equal';\n// import {memo, useCallback, useEffect, useRef, useMemo, useState} from 'react';\nimport {useCallback, useEffect, useRef, useMemo, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useMeasure} from 'react-use';\n\n// Chart margins\nconst margin = {top: 15, right: 35, bottom: 25, left: 25};\n// Buffer space along y-axis\nconst yScaleShrinkFactor = 0.7;\nconst numTicksX = (width) => (width < 480 ? 4 : 6);\n\nfunction TimeseriesOverlay({\n  xystatistics,\n  timeseries,\n  dates,\n  endDate,\n  chartType,\n  isUniform,\n  isLog,\n  isMovingAverage,\n  noRegionHighlightedDistrictData,\n  metadata,\n}) {\n  const {t} = useTranslation();\n  const refs = useRef([]);\n  const [wrapperRef, {width, height}] = useMeasure();\n\n  const [highlightedDate, setHighlightedDate] = useState(\n    dates[dates.length - 1]\n  );\n  useEffect(() => {\n    setHighlightedDate(dates[dates.length - 1]);\n  }, [dates]);\n\n  // console.log('checking metadata in Timeseries()');\n  // console.log(metadata);\n\n  const getTimeseriesStatistic = useCallback(\n    (date, statistic, movingAverage = isMovingAverage) => {\n      return getStatistic(\n        timeseries?.[date],\n        chartType,\n        statistic,\n        {\n          movingAverage,\n        },\n        metadata\n      );\n    },\n    [chartType, isMovingAverage, timeseries, metadata]\n  );\n\n  const condenseChart = useMemo(() => {\n    const T = dates.length;\n    const days = differenceInDays(\n      parseIndiaDate(dates[T - 1]),\n      parseIndiaDate(dates[0])\n    );\n    // Chart extremes\n    const chartRight = width - margin.right;\n    // Bar widths\n    const axisWidth = Math.max(0, chartRight - margin.left) / (1.25 * days);\n    return axisWidth < 4;\n  }, [width, dates]);\n\n  const xScale = useMemo(() => {\n    const T = dates.length;\n    const chartRight = width - margin.right;\n\n    return scaleTime()\n      .clamp(true)\n      .domain([\n        parseIndiaDate(dates[0] || endDate),\n        parseIndiaDate(dates[T - 1] || endDate),\n      ])\n      .range([margin.left, chartRight]);\n  }, [width, endDate, dates]);\n\n  const yScales = useMemo(() => {\n    const chartBottom = height - margin.bottom;\n\n    const addScaleBuffer = (scale, log = false) => {\n      const domain = scale.domain();\n      if (log) {\n        scale.domain([\n          domain[0],\n          domain[0] * Math.pow(domain[1] / domain[0], 1 / yScaleShrinkFactor),\n        ]);\n      } else {\n        scale.domain([\n          domain[0],\n          domain[0] + (domain[1] - domain[0]) / yScaleShrinkFactor,\n        ]);\n      }\n      return scale;\n    };\n\n    const [uniformScaleMin, uniformScaleMax] = extent(\n      dates.reduce((res, date) => {\n        res.push(\n          ...PRIMARY_STATISTICS.map((statistic) =>\n            getTimeseriesStatistic(date, statistic)\n          )\n        );\n        return res;\n      }, [])\n    );\n\n    const yScaleUniformLinear = addScaleBuffer(\n      scaleLinear()\n        .clamp(true)\n        .domain([Math.min(0, uniformScaleMin), Math.max(1, uniformScaleMax)])\n        .range([chartBottom, margin.top])\n        .nice(4)\n    );\n\n    const yScaleUniformLog = addScaleBuffer(\n      scaleLog()\n        .clamp(true)\n        .domain([1, Math.max(10, uniformScaleMax)])\n        .range([chartBottom, margin.top])\n        .nice(4),\n      true\n    );\n\n    return xystatistics.map((statistic) => {\n      if (isUniform) {\n        if (\n          chartType === 'total' &&\n          isLog &&\n          PRIMARY_STATISTICS.includes(statistic)\n        ) {\n          return yScaleUniformLog;\n        } else if (PRIMARY_STATISTICS.includes(statistic)) {\n          return yScaleUniformLinear;\n        }\n      }\n\n      let scaleMin;\n      let scaleMax;\n      // 65 seems enough to include 100 (100 is too much)\n      if (chartType === 'total' && STATISTIC_CONFIGS[statistic].format === '%')\n        [scaleMin, scaleMax] = [0, 65];\n      else\n        [scaleMin, scaleMax] = extent(dates, (date) =>\n          getTimeseriesStatistic(date, statistic)\n        );\n\n      if (chartType === 'total' && isLog) {\n        return addScaleBuffer(\n          scaleLog()\n            .clamp(true)\n            .domain([1, Math.max(10, scaleMax)])\n            .range([chartBottom, margin.top])\n            .nice(4),\n          true\n        );\n      } else {\n        return addScaleBuffer(\n          scaleLinear()\n            .clamp(true)\n            .domain([\n              Math.min(0, scaleMin),\n              STATISTIC_CONFIGS[statistic].format === '%'\n                ? Math.min(100, Math.max(1, scaleMax))\n                : Math.max(1, scaleMax),\n            ])\n            .range([chartBottom, margin.top])\n            .nice(4)\n        );\n      }\n    });\n  }, [\n    height,\n    chartType,\n    isUniform,\n    isLog,\n    xystatistics,\n    dates,\n    getTimeseriesStatistic,\n  ]);\n\n  useEffect(() => {\n    if (!width || !height) return;\n\n    const T = dates.length;\n    // Chart extremes\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n\n    // const isDiscrete = chartType === 'delta' && !isMovingAverage;\n\n    const xAxis = (g) =>\n      g\n        .attr('class', 'x-axis')\n        .call(axisBottom(xScale).ticks(numTicksX(width)));\n\n    const xAxis2 = (g, yScale) => {\n      g.attr('class', 'x-axis2')\n        .call(axisBottom(xScale).tickValues([]).tickSize(0))\n        .select('.domain')\n        .style('transform', `translate3d(0, ${yScale(0)}px, 0)`);\n\n      if (yScale(0) !== chartBottom) g.select('.domain').attr('opacity', 0.4);\n      else g.select('.domain').attr('opacity', 0);\n    };\n\n    const yAxis = (g, yScale, format) =>\n      g.attr('class', 'y-axis').call(\n        axisRight(yScale)\n          .ticks(4)\n          .tickFormat((num) => formatNumber(num, format))\n          .tickPadding(4)\n      );\n\n    function mousemove(event) {\n      const xm = pointer(event)[0];\n      const date = xScale.invert(xm);\n      if (!isNaN(date)) {\n        const bisectDate = bisector((date) => parseIndiaDate(date)).left;\n        const index = bisectDate(dates, date, 1);\n        const dateLeft = dates[index - 1];\n        const dateRight = dates[index];\n        setHighlightedDate(\n          date - parseIndiaDate(dateLeft) < parseIndiaDate(dateRight) - date\n            ? dateLeft\n            : dateRight\n        );\n      }\n    }\n\n    function mouseout(event) {\n      setHighlightedDate(dates[T - 1]);\n    }\n\n    /* Begin drawing charts */\n    // xystatistics.forEach((statistic, i) => {\n    // if (i != 0) return;\n\n    const statistic1 = xystatistics[0];\n    const statistic2 = xystatistics[1];\n\n    const ref = refs.current[0]; // only one always\n    const svg = select(ref);\n    const t = svg.transition().duration(D3_TRANSITION_DURATION);\n\n    // const yScale1 = yScales[0];\n    // const yScale2 = yScales[1];\n    const yScale = yScales[1]; // Use for both\n    const statisticConfig1 = STATISTIC_CONFIGS[statistic1];\n    const statisticConfig2 = STATISTIC_CONFIGS[statistic2];\n    const format = STATISTIC_CONFIGS[statistic1].format === '%' ? '%' : 'short';\n    const isNonLinear = !!STATISTIC_CONFIGS[statistic1]?.nonLinear;\n\n    // /* X axis */\n    svg\n      .select('.x-axis')\n      .style('transform', `translate3d(0, ${chartBottom}px, 0)`)\n      .transition(t)\n      .call(xAxis);\n\n    svg.select('.x-axis2').transition(t).call(xAxis2, yScale);\n\n    /* Y axis */\n    svg\n      .select('.y-axis')\n      .style('transform', `translate3d(${chartRight}px, 0, 0)`)\n      .transition(t)\n      .call(yAxis, yScale, format);\n\n    // /* Path dots */\n    // svg\n    //   .selectAll('circle.normal')\n    //   .data(condenseChart ? [] : dates, (date) => date)\n    //   .join((enter) =>\n    //     enter\n    //       .append('circle')\n    //       .attr('class', 'normal')\n    //       .attr('fill', statisticConfig1?.color)\n    //       .attr('stroke', statisticConfig2?.color)\n    //       .attr('cx', (date) => xScale(parseIndiaDate(date)))\n    //       .attr('cy', (date) =>\n    //         yScale(isDiscrete ? 0 : getTimeseriesStatistic(date, statistic1))\n    //       )\n    //       .attr('r', 2)\n    //   )\n    //   .transition(t)\n    //   .attr('cx', (date) => xScale(parseIndiaDate(date)))\n    //   .attr('cy', (date) => yScale(getTimeseriesStatistic(date, statistic1)));\n\n    // const areaPath = (dates, allZero = false) =>\n    //   area()\n    //     .curve(curveStep)\n    //     .x((date) => xScale(parseIndiaDate(date)))\n    //     .y0(yScale(0))\n    //     .y1(\n    //       allZero\n    //         ? yScale(0)\n    //         : (date) => yScale(getTimeseriesStatistic(date, statistic, false))\n    //     )(dates);\n\n    // svg\n    //   .selectAll('.trend-area')\n    //   .data(\n    //     T && chartType === 'delta' && !isNonLinear && condenseChart\n    //       ? [dates]\n    //       : []\n    //   )\n    //   .join(\n    //     (enter) =>\n    //       enter\n    //         .append('path')\n    //         .attr('class', 'trend-area')\n    //         .call((enter) =>\n    //           enter\n    //             .attr('d', (dates) => areaPath(dates, true))\n    //             .transition(t)\n    //             .attr('d', areaPath)\n    //         ),\n    //     (update) =>\n    //       update.call((update) =>\n    //         update.transition(t).attrTween('d', function (dates) {\n    //           const previous = select(this).attr('d');\n    //           const current = areaPath(dates);\n    //           return interpolatePath(previous, current);\n    //         })\n    //       ),\n    //     (exit) =>\n    //       exit.call((exit) =>\n    //         exit\n    //           .transition(t)\n    //           .attr('d', (dates) => areaPath(dates, true))\n    //           .remove()\n    //       )\n    //   )\n    //   .transition(t)\n    //   .attr('opacity', isMovingAverage ? 0.3 : 1);\n\n    // svg\n    //   .selectAll('.stem')\n    //   .data(\n    //     T && chartType === 'delta' && !isNonLinear && !condenseChart\n    //       ? dates\n    //       : [],\n    //     (date) => date\n    //   )\n    //   .join(\n    //     (enter) =>\n    //       enter\n    //         .append('line')\n    //         .attr('class', 'stem')\n    //         .attr('stroke-width', 4)\n    //         .attr('x1', (date) => xScale(parseIndiaDate(date)))\n    //         .attr('y1', yScale(0))\n    //         .attr('x2', (date) => xScale(parseIndiaDate(date)))\n    //         .attr('y2', yScale(0)),\n    //     (update) => update,\n    //     (exit) =>\n    //       exit.call((exit) =>\n    //         exit\n    //           .transition(t)\n    //           .attr('x1', (date) => xScale(parseIndiaDate(date)))\n    //           .attr('x2', (date) => xScale(parseIndiaDate(date)))\n    //           .attr('y1', yScale(0))\n    //           .attr('y2', yScale(0))\n    //           .remove()\n    //       )\n    //   )\n    //   .transition(t)\n    //   .attr('x1', (date) => xScale(parseIndiaDate(date)))\n    //   .attr('y1', yScale(0))\n    //   .attr('x2', (date) => xScale(parseIndiaDate(date)))\n    //   .attr('y2', (date) =>\n    //     yScale(getTimeseriesStatistic(date, statistic, false))\n    //   )\n    //   .attr('opacity', isMovingAverage ? 0.2 : 1);\n\n    const linePath1 = (\n      movingAverage = isMovingAverage,\n      curve = curveMonotoneX\n    ) =>\n      line()\n        .curve(curve)\n        .x((date) => xScale(parseIndiaDate(date)))\n        .y((date) =>\n          yScale(getTimeseriesStatistic(date, statistic1, movingAverage))\n        );\n\n    const linePath2 = (\n      movingAverage = isMovingAverage,\n      curve = curveMonotoneX\n    ) =>\n      line()\n        .curve(curve)\n        .x((date) => xScale(parseIndiaDate(date)))\n        .y((date) =>\n          yScale(getTimeseriesStatistic(date, statistic2, movingAverage))\n        );\n\n    svg\n      .select('.trend1')\n      .selectAll('path')\n      .data(\n        T && (chartType === 'total' || isNonLinear || isMovingAverage)\n          ? [dates]\n          : []\n      )\n      .join('path')\n      .attr('class', 'trend1')\n      .attr('fill', 'none')\n      .attr('stroke-width', 4)\n      .attr('d', linePath1())\n      .attr('stroke', statisticConfig1?.color + (condenseChart ? '99' : '50'))\n      .call((enter) => enter.transition(t).attr('opacity', 1));\n\n    svg\n      .select('.trend2')\n      .selectAll('path')\n      .data(\n        T && (chartType === 'total' || isNonLinear || isMovingAverage)\n          ? [dates]\n          : []\n      )\n      .join('path')\n      .attr('class', 'trend2')\n      .attr('fill', 'none')\n      .attr('stroke-width', 3)\n      .attr('d', linePath2())\n      .attr('stroke', statisticConfig2?.color + (condenseChart ? '99' : '50'))\n      .call((enter) => enter.transition(t).attr('opacity', 1));\n\n    // RAW DATA IN BACKGROUND FOR MOVING AVERAGE PLOT - SKIP\n    // svg\n    //   .select('.trend-background')\n    //   .selectAll('path')\n    //   .data(\n    //     T && chartType === 'delta' && isNonLinear && isMovingAverage\n    //       ? [dates]\n    //       : []\n    //   )\n    //   .join(\n    //     (enter) =>\n    //       enter\n    //         .append('path')\n    //         .attr('class', 'trend-background')\n    //         .attr('fill', 'none')\n    //         .attr('stroke-width', 4)\n    //         .attr('d', linePath1(false, curveLinear))\n    //         .call((enter) => enter.transition(t).attr('opacity', 0.2)),\n    //     (update) =>\n    //       update.call((update) =>\n    //         update\n    //           .transition(t)\n    //           .attrTween('d', function (date) {\n    //             const previous = select(this).attr('d');\n    //             const current = linePath1(false, curveLinear)(date);\n    //             return interpolatePath(previous, current);\n    //           })\n    //           .attr('opacity', 0.2)\n    //       ),\n    //     (exit) =>\n    //       exit.call((exit) => exit.transition(t).attr('opacity', 0).remove())\n    //   )\n    //   .attr('stroke', statisticConfig1?.color + (condenseChart ? '99' : '50'));\n\n    svg.selectAll('*').attr('pointer-events', 'none');\n    svg\n      .on('mousemove', mousemove)\n      .on('touchmove', (event) => mousemove(event.touches[0]))\n      .on('mouseout touchend', mouseout);\n  }, [\n    width,\n    height,\n    chartType,\n    isMovingAverage,\n    condenseChart,\n    xScale,\n    yScales,\n    xystatistics,\n    getTimeseriesStatistic,\n    dates,\n  ]);\n\n  // The following draw the interactive circle indicating mouse\n  // position. FIXME: update design to be more proper as above, giving\n  // circles for both series\n  useEffect(() => {\n    xystatistics.forEach((statistic, i) => {\n      if (i != 0) return;\n      const ref = refs.current[0];\n      const svg = select(ref);\n      const statisticConfig = STATISTIC_CONFIGS[statistic];\n      const yScale = yScales[0]; // replace [i] by [0]\n      const t = svg.transition().duration(D3_TRANSITION_DURATION);\n\n      svg\n        .selectAll('circle.condensed')\n        .data(\n          condenseChart && highlightedDate ? [highlightedDate] : [],\n          (date) => date\n        )\n        .join((enter) =>\n          enter\n            .append('circle')\n            .attr('class', 'condensed')\n            .attr('fill', statisticConfig?.color)\n            .attr('stroke', statisticConfig?.color)\n            .attr('pointer-events', 'none')\n            .attr('cx', (date) => xScale(parseIndiaDate(date)))\n            .attr('cy', (date) =>\n              yScale(getTimeseriesStatistic(date, statistic))\n            )\n            .attr('r', 4)\n        )\n        .transition(t)\n        .attr('cx', (date) => xScale(parseIndiaDate(date)))\n        .attr('cy', (date) => yScale(getTimeseriesStatistic(date, statistic)));\n\n      if (!condenseChart) {\n        svg\n          .selectAll('circle')\n          .attr('r', (date) => (date === highlightedDate ? 4 : 2));\n      }\n    });\n  }, [\n    condenseChart,\n    highlightedDate,\n    xScale,\n    yScales,\n    xystatistics,\n    getTimeseriesStatistic,\n  ]);\n\n  const getTimeseriesStatisticDelta = useCallback(\n    (statistic) => {\n      if (!highlightedDate) return;\n\n      const currCount = getTimeseriesStatistic(highlightedDate, statistic);\n      if (STATISTIC_CONFIGS[statistic]?.hideZero && currCount === 0) return;\n\n      const prevDate =\n        dates[dates.findIndex((date) => date === highlightedDate) - 1];\n\n      const prevCount = getTimeseriesStatistic(prevDate, statistic);\n      return currCount - prevCount;\n    },\n    [dates, highlightedDate, getTimeseriesStatistic]\n  );\n\n  const trail = useMemo(\n    () =>\n      xystatistics.map((statistic, index) => ({\n        animationDelay: `${index * 250}ms`,\n      })),\n    [xystatistics]\n  );\n\n  return (\n    <div className=\"Timeseries\">\n      {xystatistics.map((statistic, index) => {\n        const total = getTimeseriesStatistic(highlightedDate, statistic);\n        const delta = getTimeseriesStatisticDelta(statistic, index);\n        const statisticConfig = STATISTIC_CONFIGS[statistic];\n        if (index > 0) return <div key={statistic}></div>;\n        return (\n          <div\n            key={statistic}\n            className={classnames('svg-parent fadeInUp', `is-${statistic}`)}\n            style={trail[index]}\n            ref={index === 0 ? wrapperRef : null}\n          >\n            {highlightedDate && (\n              <div className={classnames('stats', `is-${statistic}`)}>\n                <h5 className=\"title\">\n                  {t(capitalize(statisticConfig.displayName))}\n                </h5>\n                <h5>{formatDate(highlightedDate, 'dd MMMM')}</h5>\n                <div className=\"stats-bottom\">\n                  <h2>\n                    {!noRegionHighlightedDistrictData ||\n                    !statisticConfig?.hasPrimary\n                      ? formatNumber(\n                          total,\n                          statisticConfig.format !== 'short'\n                            ? statisticConfig.format\n                            : 'long',\n                          statistic\n                        )\n                      : '-'}\n                  </h2>\n                  <h6>\n                    {!noRegionHighlightedDistrictData ||\n                    !statisticConfig?.hasPrimary\n                      ? `${delta > 0 ? '+' : ''}${formatNumber(\n                          delta,\n                          statisticConfig.format !== 'short'\n                            ? statisticConfig.format\n                            : 'long',\n                          statistic\n                        )}`\n                      : ''}\n                  </h6>\n                </div>\n              </div>\n            )}\n            <svg\n              ref={(element) => {\n                refs.current[index] = element;\n              }}\n              preserveAspectRatio=\"xMidYMid meet\"\n            >\n              <g className=\"x-axis\" />\n              <g className=\"x-axis2\" />\n              <g className=\"y-axis\" />\n              <g className=\"trend-background\" />\n              <g className=\"trend1\" />\n              <g className=\"trend2\" />\n            </svg>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default TimeseriesOverlay;\n"],"sourceRoot":""}